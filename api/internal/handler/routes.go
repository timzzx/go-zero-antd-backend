// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"tapi/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/loginout",
				Handler: LoginOutHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/user/info",
				Handler: UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/password",
				Handler: EditPasswordHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.LoginMiddle},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/api/user/add",
					Handler: UserAddHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/user/del",
					Handler: UserDelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/user/list",
					Handler: UserListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/router/list",
					Handler: RouterListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/router/add",
					Handler: RouterAddHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/role/list",
					Handler: RoleListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/role/edit",
					Handler: RoleEditHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/role/delete",
					Handler: RoleDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/permission/resource/list",
					Handler: PermissionResourceListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/permission/resource/edit",
					Handler: PermissionResourceEditHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/permission/resource/delete",
					Handler: PermissionResourceDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/role/permission/resource/list",
					Handler: RolePermissionResourceListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/role/permission/resource/edit",
					Handler: RolePermissionResourceEditHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/user/set/role",
					Handler: UserSetRoleHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
